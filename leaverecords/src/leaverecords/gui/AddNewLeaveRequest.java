/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package leaverecords.gui;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.util.Calendar;
import java.util.Date;
import java.util.concurrent.Semaphore;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import staffdatamodel.LeaveRecord;
import staffdatamodel.LeaveType;
import staffdatamodel.Request;
import staffdatamodel.StaffList;
import staffdatamodel.StaffMember;

/**
 *
 * This form is concerned with adding a new leave record for a staff member. 
 * 
 * 
 * @author Adam Stevenson
 */
public class AddNewLeaveRequest extends javax.swing.JFrame {

    private Semaphore lock = new Semaphore(1);
    private StaffList staffList;
    private LeaveRecord leaveRecord;
    private int selectedStaffMember;
    private DefaultComboBoxModel<LeaveType> leaveTypeModel =
       new DefaultComboBoxModel<>(LeaveType.values());
     
    /**
     * Creates new form AddNewLeaveRequest, this is responsible for adding new requests
     * for staff members
     */
    public AddNewLeaveRequest() {
        initComponents();
        backgroundPanel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddCancel = new javax.swing.JButton();
        btnAddStaffRequest = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtAddDuration = new javax.swing.JTextField();
        lblDepartment = new javax.swing.JLabel();
        lblSurname = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        txtAddSpecialReason = new javax.swing.JTextField();
        lblFirstName1 = new javax.swing.JLabel();
        cboLeaveType = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        lblHeading1 = new javax.swing.JLabel();
        txtStaffMember = new javax.swing.JTextField();
        jDateSD = new com.toedter.calendar.JDateChooser();
        jDateED = new com.toedter.calendar.JDateChooser();
        lblSurname1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblHeading = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(930, 0, 0, 0));
        setResizable(false);

        btnAddCancel.setText("Close");
        btnAddCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddCancelMouseClicked(evt);
            }
        });

        btnAddStaffRequest.setText("Add");
        btnAddStaffRequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddStaffRequestMouseClicked(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblDepartment.setText("Duration:");

        lblSurname.setText("Start Date:");

        lblFirstName.setText("Leave Type:");

        lblFirstName1.setText("Special Reason:");

        cboLeaveType.setModel(leaveTypeModel);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblHeading1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblHeading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading1.setText("Staff Member:");

        txtStaffMember.setEditable(false);
        txtStaffMember.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeading1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtStaffMember)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeading1)
                    .addComponent(txtStaffMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDateSD.setDateFormatString("dd-MM-yyyy");

        jDateED.setDateFormatString("dd-MM-yyyy");
        jDateED.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateEDPropertyChange(evt);
            }
        });

        lblSurname1.setText("End Date:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 15, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblDepartment)
                                    .addComponent(lblFirstName1))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtAddSpecialReason, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                                    .addComponent(txtAddDuration)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSurname, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblSurname1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateED, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboLeaveType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jDateSD, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                                .addGap(97, 97, 97)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(cboLeaveType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSurname)
                    .addComponent(jDateSD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSurname1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDepartment))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddSpecialReason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFirstName1))
                .addGap(44, 44, 44))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblHeading.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading.setText("Add New Staff Leave Request");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(lblHeading, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblHeading)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAddStaffRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddStaffRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void btnAddCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddCancelMouseClicked
        dispose();
    }//GEN-LAST:event_btnAddCancelMouseClicked

    private void btnAddStaffRequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddStaffRequestMouseClicked
        saveLeaveRequest();        
    }//GEN-LAST:event_btnAddStaffRequestMouseClicked

    private void jDateEDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateEDPropertyChange
        calculateDuration();
    }//GEN-LAST:event_jDateEDPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewLeaveRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewLeaveRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewLeaveRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewLeaveRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewLeaveRequest().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCancel;
    private javax.swing.JButton btnAddStaffRequest;
    private javax.swing.JComboBox cboLeaveType;
    private com.toedter.calendar.JDateChooser jDateED;
    private com.toedter.calendar.JDateChooser jDateSD;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblFirstName1;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblHeading1;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JLabel lblSurname1;
    private javax.swing.JTextField txtAddDuration;
    private javax.swing.JTextField txtAddSpecialReason;
    private javax.swing.JTextField txtStaffMember;
    // End of variables declaration//GEN-END:variables

    /**
     * Changes the background image of the form
     * 
     */
     public void backgroundPanel(){    
    
        setTitle("Add New Request");
        
        setLayout(new BorderLayout());
        JLabel lblBackground = new JLabel(new ImageIcon("images/Background.JPG"));
        
        add (lblBackground);
        lblBackground.setLayout(new FlowLayout());
    }

   /**
    * This method brings the staffList from the main form(LeaveRecordsMenu)
    * and ensures that the staffList being used for adding purposes, is still used
    * 
    * @param staffList arraylist carried across from another form
    * @param leaveRecord arraylist carried across from another form
    * @param selectedStaffMember the index of the staffmember for which a new request
    * will be attribued to.
    * @param currStaffMember the staff member selected from the list box of staff members
    */
    public void setStaffList(StaffList objTarget, int objStaffMember, LeaveRecord objLeaveRecord){
        staffList = objTarget;
        leaveRecord = objLeaveRecord;
        selectedStaffMember = objStaffMember;
    
        StaffMember currStaffMember 
                = staffList.getStaffAt(selectedStaffMember);
        
        txtStaffMember.setText(currStaffMember.getFullName());
    }
    
   /**
    * Once validated (check isSaveable), the request is added to the 
    * to the staff members leaverecord
    * 
    * There are three possible constructors for this method
    * Default: no values required
    * Second: leaveType, startDate, Duration
    * Third: startDate, duration, specialReason
    * 
    * @param currStaffMember = the staff member to append a request to
    * @param leaveType = The type of leave: Annual, sick, special
    * @param startDate = the start of the request's leave.
    * @param specialReason = the reason for the request.
    */
    private void saveLeaveRequest()
    {
        // get the staff member 
        StaffMember currStaffMember 
                = staffList.getStaffAt(selectedStaffMember);
        // set up the variables responsible for adding a request
        LeaveType leaveType;
        
        // assign the value of the combo box to the leaveType variable
        switch (cboLeaveType.getSelectedIndex()){
            
            case 0:
                leaveType = LeaveType.ANNUAL;
                break;
            case 1:
                leaveType = LeaveType.SPECIAL;
                break;
            case 2:
                leaveType = LeaveType.SICK;
                break;
            default: 
                throw new AssertionError();
        }
        
        // create the new requests - Three possible constructors!

        try{
                // default constructor for a request
                if(cboLeaveType.getSelectedIndex() == 0 && jDateSD.getDate() == null
                        && txtAddDuration.getText().length() == 0 && txtAddSpecialReason.getText().length()==0)
                {
                    lock.acquire();
                    
                    Request currStaffRequest = new Request();
                    leaveRecord.addRequest(currStaffRequest);
                    currStaffMember.addRequest(currStaffRequest); 
                    
                    lock.release();
                } 
            
                // adding request: Constuctor = leavetype, startdate, duration
                if(jDateSD.getDate() != null && txtAddDuration.getText().length() > 0
                        && txtAddSpecialReason.getText().length() == 0)
                {
                    int requestDuration = Integer.parseInt(txtAddDuration.getText());
                        
                    lock.acquire();
                    
                    Request currStaffRequest = new Request(leaveType, jDateSD.getDate(), requestDuration);
                    leaveRecord.addRequest(currStaffRequest);
                    currStaffMember.addRequest(currStaffRequest);
                    
                    lock.release();
                }  
            
                // adding request: Constuctor = startdate, duration, special reason
                if(jDateSD.getDate() != null && txtAddDuration.getText().length() > 0 
                        && txtAddSpecialReason.getText().length() > 0)
                {
                    int requestDuration = Integer.parseInt(txtAddDuration.getText());
                        
                    lock.acquire();
                    
                    Request currStaffRequest = new Request(jDateSD.getDate(),requestDuration,
                            txtAddSpecialReason.getText());
                    leaveRecord.addRequest(currStaffRequest);
                    currStaffMember.addRequest(currStaffRequest);
                    
                    lock.release();
                }  
                JOptionPane.showMessageDialog(this, 
                "Request has been successfully added", 
                "Added changed successfully", 
                JOptionPane.INFORMATION_MESSAGE);      
        }
        catch (InterruptedException ex){}
        staffList.notifyObservers();
        this.dispose();
   }
    
   /**
    * This method is used to automatically calculate the duration, between two
    * specific date choosers. 
    * @param dateSD Start date, formatted as type date
    * @param calSD start date, formatted as type calendar
    * @param dateED end date, formatted as type date
    * @param calED end date, formatted as type calendar
    * 
    * @throws NullPointerException
    */
    private void calculateDuration ()
    {
        try{
        
        if(jDateSD != null)
        {
        
        // start date
        Date dateSD = jDateSD.getDate();
        Calendar calSD = Calendar.getInstance();
        calSD.setTime(dateSD);
        
        // end date
        Date dateED = jDateED.getDate();
        Calendar calED = Calendar.getInstance();
        calED.setTime(dateED);
        
            if (calSD.get(Calendar.DAY_OF_YEAR) > calED.get(Calendar.DAY_OF_YEAR)) 
            {
                JOptionPane.showMessageDialog(this, "The start date is before the end date"
                        + ", please make alterations.", 
                "Invalid Data!", JOptionPane.ERROR_MESSAGE);

                jDateED.setDate(dateED);

            }
            else{
                // calculate the duration
                int duration = calED.get(Calendar.DAY_OF_YEAR) - calSD.get(Calendar.DAY_OF_YEAR);
                
                txtAddDuration.setText("" + duration);
            }   
        }
        }
        catch (NullPointerException ex){}
    }
    
    }
